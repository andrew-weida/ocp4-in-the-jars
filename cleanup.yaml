- name: Clean updercloud
  hosts: localhost
  vars_files:
    - variables.yaml
    - vault-variables.yaml
    - bm-ansible-nodes.json
  tasks:
  - name: Add bastion group-host for cleanup
    ansible.builtin.add_host:
      name: "{{ item.name }}.{{ domain }}"
      ansible_ssh_pass: "{{ secure_password }}"
      ansible_ssh_user: kni
      ansible_become: true
      ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ProxyCommand="ssh -W %h:%p -q {{ item.hypervisor_user }}@{{ item.hypervisor_name }}"'
      groups:
        - bastion
    with_items:
      - "{{ bastion_nodes }}"

  - name: Add utility group-host for cleanup
    ansible.builtin.add_host:
      name: "{{ item.name }}.{{ domain }}"
      ansible_ssh_pass: "{{ secure_password }}"
      ansible_ssh_user: kni
      ansible_become: true
      ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ProxyCommand="ssh -W %h:%p -q {{ item.hypervisor_user }}@{{ item.hypervisor_name }}"'
      groups:
        - utility
    with_items:
      - "{{ utility_nodes }}"

  - name: Add all hypervisor group-host
    ansible.builtin.add_host:
      name: "{{ item.hypervisor_name }}"
      ansible_ssh_user: "{{ item.hypervisor_user }}"
      ansible_ssh_private_key_file: "{{ item.hypervisor_ssh_key }}"
      groups:
        - hypervisor_host
    with_items:
      - "{{ bastion_nodes }}"
      - "{{ utility_nodes }}"
      - "{{ master_nodes }}"
      - "{{ worker_nodes }}"
    when:
      - item.hypervisor_name != "localhost"
      - item.state == "present"

- name: Clean bastion and utility
  hosts:
    - bastion
    - utility
  vars_files:
    - variables.yaml
    - vault-variables.yaml
    - bm-ansible-nodes.json
  ignore_errors: true
  ignore_unreachable: true
  gather_facts: false
  tasks:
  - name: Unregister host
    redhat_subscription:
      state: absent
    ignore_errors: true

- name: Cleanup
  hosts:
    - localhost
    - hypervisor_host
  vars_files:
    - variables.yaml
    - vault-variables.yaml
    - bm-ansible-nodes.json
  tasks:
  - name: Destroy virsh domain
    community.libvirt.virt:
      name: "{{ item.name }}"
      state: destroyed
    delegate_to: "{{ item.hypervisor_name }}"
    run_once: true
    when:
      - item.state == "present"
    with_items:
      - "{{ bastion_nodes }}"
      - "{{ utility_nodes }}"
      - "{{ master_nodes }}"
      - "{{ worker_nodes }}"
    ignore_errors: true

  - name: Undefine virsh domain
    community.libvirt.virt:
      name: "{{ item.name }}"
      command: undefine
    delegate_to: "{{ item.hypervisor_name }}"
    run_once: true
    when:
      - item.state == "present"
    with_items:
      - "{{ bastion_nodes }}"
      - "{{ utility_nodes }}"
      - "{{ master_nodes }}"
      - "{{ worker_nodes }}"
    ignore_errors: true
 
  - name: Remove files
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    with_items:
      - /tmp/ifcfg-eth0
      - ansible-ssh

  - name: Remove qcow2 files
    ansible.builtin.file:
      path: "{{ item.hypervisor_image_dir }}/{{ item.name }}.qcow2"
      state: absent
    delegate_to: "{{ item.hypervisor_name }}"
    run_once: true
    when:
      - item.state == "present"
    with_items:
      - "{{ bastion_nodes }}"
      - "{{ utility_nodes }}"
      - "{{ master_nodes }}"
      - "{{ worker_nodes }}"
    ignore_errors: true

  - name: Remove qcow2 files
    ansible.builtin.file:
      path: "{{ image_dir }}/{{ item }}"
      state: absent
    with_items:
      - rhel9.qcow2
      - rhel9-100G.qcow2
      - rhel9-100G-no-eth0.qcow2
      - rhel9-bastion.qcow2
      - rhel9-utility.qcow2
      - bastion.qcow2
      - utility.qcow2
      - "{{ image }}"

  - name: Remove qcow2 files
    ansible.builtin.file:
      path: "{{ image_dir_bastion }}/{{ item }}"
      state: absent
    with_items:
      - rhel9.qcow2
      - rhel9-100G.qcow2
      - rhel9-100G-no-eth0.qcow2
      - rhel9-bastion.qcow2
      - rhel9-utility.qcow2
      - bastion.qcow2
      - utility.qcow2
      - "{{ image }}"

  - name: Remove ssh known hosts - bastion
    ansible.builtin.known_hosts:
      name: "{{ item.1 }}"
      path: "{{ item.0 }}"
      state: absent
    with_nested:
      - [ '/root/.ssh/known_hosts']
      - [ 'bastion', 'bastion.{{ domain }}' ]

  - name: Remove ssh known hosts - utility
    ansible.builtin.known_hosts:
      name: "{{ item.1 }}"
      path: "{{ item.0 }}"
      state: absent
    with_nested:
      - [ '/root/.ssh/known_hosts']
      - [ 'utility', 'utility.{{ domain }}' ]

  - name: Remove files and directories
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "hosts-bastion"
      - "hosts-bastion-kni"
      - "hosts-bastion-root"
      - "hosts-utility"
      - "hosts-utility-kni"
      - "hosts-utility-root"

  - name: Delete virtualbmc interface
    when:
      - item.state == "present"
      - not redfish.enable|bool
    ansible.builtin.shell: |
      vbmc delete "{{ item.name }}"
    ignore_errors: true
    delegate_to: "{{ item.hypervisor_name }}"
    run_once: true
    with_items:
      - "{{ bastion_nodes }}"
      - "{{ utility_nodes }}"
      - "{{ master_nodes }}"
      - "{{ worker_nodes }}"

  - name: Remove bastion from ssh/config file
    ansible.builtin.blockinfile:
      path: ~/.ssh/config
      backup: true
      state: absent
      block: |
        Host {{ item.name }}.{{ domain }}
        IdentityFile ~/ansible-ssh/id_rsa
    delegate_to: "{{ item.hypervisor_name }}"
    run_once: true
    with_items: "{{ bastion_nodes }}"

  - name: Remote bastion entry in /etc/hosts - provisioning
    ansible.builtin.lineinfile:
      path: /etc/hosts
      backup: true
      regexp: "{{ item.provisioning_ip }}\t{{ item.name }}.{{ domain }}\t{{ item.name }}"
      state: absent
    delegate_to: "{{ item.hypervisor_name }}"
    run_once: true
    with_items: "{{ bastion_nodes }}"

  - name: Remote bastion entry in /etc/hosts - baremetal
    ansible.builtin.lineinfile:
      path: /etc/hosts
      backup: true
      regexp: "{{ item.baremetal_ip }}\t{{ item.name }}.{{ domain }}\t{{ item.name }}"
      state: absent
    delegate_to: "{{ item.hypervisor_name }}"
    run_once: true
    with_items: "{{ bastion_nodes }}"

  - name: Remove utility from ssh/config file
    ansible.builtin.blockinfile:
      path: ~/.ssh/config
      backup: true
      state: absent
      block: |
        Host {{ item.name }}.{{ domain }}
        IdentityFile ~/ansible-ssh/id_rsa
    delegate_to: "{{ item.hypervisor_name }}"
    run_once: true
    with_items: "{{ utility_nodes }}"

  - name: Remove utility entry in /etc/hosts - provisioning
    ansible.builtin.lineinfile:
      path: /etc/hosts
      backup: true
      regexp: "{{ item.provisioning_ip }}\t{{ item.name }}.{{ domain }}\t{{ item.name }}"
      state: absent
    delegate_to: "{{ item.hypervisor_name }}"
    run_once: true
    with_items: "{{ utility_nodes }}"

  - name: Remove utility entry in /etc/hosts - baremetal
    lineinfile:
      path: /etc/hosts
      backup: true
      regexp: "{{ item.baremetal_ip }}\t{{ item.name }}.{{ domain }}\t{{ item.name }}"
      state: absent
    delegate_to: "{{ item.hypervisor_name }}"
    run_once: true
    with_items: "{{ utility_nodes }}"

  - name: Remove SSH key
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    when:
      - delete_ssh_key_on_cleanup|bool
    with_items:
      - "{{ ssh_key }}"
      - "{{ ssh_pub }}"

