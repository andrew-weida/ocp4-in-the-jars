- name: Create inventory
  hosts: localhost
  vars_files:
    - variables.yaml
    - vault-variables.yaml
    - bm-ansible-nodes.json
  tasks:
    - name: Add bastion group-host - no localhost
      ansible.builtin.add_host:
        name: "{{ item.name }}.{{ domain }}"
        ansible_ssh_pass: "{{ secure_password }}"
        ansible_ssh_user: kni
        ansible_become: true
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ProxyCommand="ssh -W %h:%p -q {{ item.hypervisor_user }}@{{ item.hypervisor_name }}"'
        groups:
          - bastion
      with_items:
        - "{{ bastion_nodes }}"
      when: item.hypervisor_name != "localhost"

    - name: Add bastion group-host - localhost
      ansible.builtin.add_host:
        name: "{{ item.name }}.{{ domain }}"
        ansible_ssh_pass: "{{ secure_password }}"
        ansible_ssh_user: kni
        ansible_become: true
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null '
        groups:
          - bastion
      with_items:
        - "{{ bastion_nodes }}"
      when: item.hypervisor_name == "localhost"

    - name: Add utility group-host - no localhost
      ansible.builtin.add_host:
        name: "{{ item.name }}.{{ domain }}"
        ansible_ssh_pass: "{{ secure_password }}"
        ansible_ssh_user: kni
        ansible_become: true
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ProxyCommand="ssh -W %h:%p -q {{ item.hypervisor_user }}@{{ item.hypervisor_name }}"'
        groups:
          - utility
      with_items:
        - "{{ utility_nodes }}"
      when: item.hypervisor_name != "localhost"

    - name: Add utility group-host - localhost
      ansible.builtin.add_host:
        name: "{{ item.name }}.{{ domain }}"
        ansible_ssh_pass: "{{ secure_password }}"
        ansible_ssh_user: kni
        ansible_become: true
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null '
        groups:
          - utility
      with_items:
        - "{{ utility_nodes }}"
      when: item.hypervisor_name == "localhost"

    - name: Add all hypervisor group-host
      ansible.builtin.add_host:
        name: "{{ item.hypervisor_name }}"
        ansible_ssh_user: "{{ item.hypervisor_user }}"
        ansible_ssh_private_key_file: "{{ item.hypervisor_ssh_key }}"
        groups:
          - hypervisor_host
      with_items:
        - "{{ bastion_nodes }}"
        - "{{ utility_nodes }}"
        - "{{ master_nodes }}"
        - "{{ worker_nodes }}"
      when:
        - item.hypervisor_name != "localhost"
        - item.state == "present"

- name: Start OCP
  hosts:
    - localhost
    - hypervisor_host
  vars_files:
    - variables.yaml
    - vault-variables.yaml
    - bm-ansible-nodes.json
  tasks:
    - name: Start utility
      community.libvirt.virt:
        name: "{{ item.name }}"
        state: running
      delegate_to: "{{ item.hypervisor_name }}"
      run_once: true
      when:
        - item.state == "present"
      with_items:
        - "{{ utility_nodes }}"

    - name: Sleep 30 seconds
      pause:
        seconds: 30

    - name: Start virsh domain
      community.libvirt.virt:
        name: "{{ item.name }}"
        state: running
      delegate_to: "{{ item.hypervisor_name }}"
      run_once: true
      when:
        - item.state == "present"
      with_items:
        - "{{ bastion_nodes }}"
        - "{{ master_nodes }}"
        - "{{ worker_nodes }}"
      ignore_errors: true
